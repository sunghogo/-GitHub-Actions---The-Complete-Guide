Section 3: GitHub Actions - Basic Building Blocks & Components
Code Repository -> Workflows -> Jobs -> Steps

Workflows:
1. Attached to GitHub repository
2. Contains one or more Jobs
3. Triggered upon Events

Jobs:
1. Define a Runner (execution environment)
2. Contain one or more Steps
3. Run in parallel (default) or sequential
4. Can be conditional

Steps:
1. Execute a shell script or an Action
2. Can use custom or third-party actions
3. Steps are executed in order
4. Can be conditional

Events (Workflow Triggers):
https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
    Repository-Related
    1. push: Pushing a commit
    2. pull_request: Pull request action (opened, closed, ...)
    3. create: A branch or rag was created
    4. fork: Repository was forked
    5. issues: An issue waso pened, deleted, ...
    6. issue_comment: Issue or pull request comment action
    7. watch: Repository was starred
    8. discussion: Discussion action (created, delted, ...)
    etc...

    Other
    1. workflow_dispatch: Manually trigger workflow
    2. repository_dispatch: REST API request triggers workflow
    3. schedule: Workflow is scheduled
    4. workflow_call: Can be called by other workflows

Actions:
Command ("run"): A (typically simple) shell command that's defined by you
vs
Action ("uses"): A (custom) application that performs a (typically complex) frequently repeated task
    - You can build your own Actions but you can also use official or community Actions
    - Can further specify using 'with' keyword

    Actions ("actions/...@v3")
    1. actions/checkout (https://github.com/actions/checkout)

https://github.com/actions/runner-images (check dependencies for runner)

Git Credential Manager:
https://github.com/git-ecosystem/git-credential-manager

Contextx:
https://docs.github.com/en/actions/learn-github-actions/contexts
Meta information/context data about event triggers, runners, etc. that can be accessed within Steps

Module Summary:
    Core Components:
        1. Workflows: Define Events + Jobs
        2. Jobs: Define Runners + Steps
        3. Steps: Do the actual work

    Events/Triggers:
        1. Broad variety of events (repository-related & other)
        2. Workflows have at least one (but possible more) events(s)

    Runners:
        1. Servers (machines) that execute that Jobs
        2. Pre-defined Runners (with different OS) exist
        3. You can also create custom Runners
    
    Workflow Execution:
        1. Workflows are executed when their events are Triggered
        2. GitHub provides detailed insights into job execution (+ logs)

    Actions:
        1. You can run shell commands
        2. But you can also use pre-defined Actions (official, community, or custom)